#说明： 如果设置中，有-n 参数，说明这个参数可以不用 PREFIX 即可使用。 例: bind-key -n C-r source-file ~/.tmux.conf
#安装列表: 1.[linux] sudo apt-get install xclip [osx]:brew install reattach-to-user-namespace
#          2.gem install tmuxinator
#
#p #前一个window
#n #下一个window
#d #显示terminal
#, #重命名window
#c #新建 window
#w #显示 window列表
#f #查找 window
#& #关闭 window
#% #纵向分割window
#" #横向分割 window
#o #在不同 pane中切换，也可以用方向键
#space #当前 pane 布局，在even-horizontal, even-vertical,main-horizontal,main-vertical,tiled
#x #关闭 pane
#[ #复制模式, Space 选择 开始复制,Enter 复制到 Buffer
#] #粘贴
#************************************
#取消默认绑定的按键，改为 Ctrl-a
unbind C-b
set -g prefix C-a
#设置 prefix,防止 tmux 按键和程序按键冲突。比如c-a 在 vim 配置为全选,在运行 tmux 时，需要先按 c-a,然后再按 vim 中的 c-a
bind C-a send-prefix
#修改默认延迟时间
set -g escape-time 0
#设置 window 窗口 index 默认开始值
set -g base-index 1
#设置 pane 的 index 默认起始值
set -g pane-base-index 1
#设置终端颜色，有时 vim 的 colortheme 有问题，设置它可以解决
set -g default-terminal "screen-256color"
#重新加载配置文件
bind r source ~/.tmux.conf \; display "Configuration reloaded!"
#分割窗口
unbind '"'
bind | split-window -h
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
unbind %
bind - split-window -v
bind-key s split-window -p 50 -c "#{pane_current_path}"
#在 pane 中移动
bind h select-pane -L 
bind j select-pane -D 
bind k select-pane -U 
bind l select-pane -R
#调整 pane大小
bind H resize-pane -L 5 
bind J resize-pane -D 5 
bind K resize-pane -U 5 
bind L resize-pane -R 5
#在 window中循环遍历(个人喜欢默认的 n, p)
bind -r C-h select-window -t :- 
bind -r C-l select-window -t :+
#开启鼠标模式
setw -g mode-mouse on
#设置鼠标可以选择 pane 和 window
set -g mouse-select-pane on 
set -g mouse-resize-pane on 
set -g mouse-select-window on
#设置状态栏
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ Sessions: #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]⮀"
#设置 monitor 开启
setw -g monitor-activity on 
set -g visual-activity on
#ssh config 
bind S command-prompt -p "ssh to:" "new-window -n %1 'ssh %1'"
#设置历史大小
set -g history-limit 10000
#设置为 vi 模式
setw -g mode-keys vi
#复制
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
#复制到粘贴板
#bind -t vi-copy 'v' begin-selection #For Linux
#bind -t vi-copy 'y' copy-selection #For Linux
#bind C-c run "tmux save-buffer - | xclip -i -sel clipboard" #For Linux
#bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" #For Linux
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy" #For MacOSX
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer" #For Mac OSX
set-option -g default-command "reattach-to-user-namespace -l zsh" #For Mac OSX.需要根据情况修改 zsh 为 bash，也就是 shell
#pane 转为 window
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp
#切换session
bind -r ( switch-client -p 
bind -r  ) switch-client -n
